powershell 
set-alias k kubectl

bash
alias k=kubectl


for test that create resource:
+ --dry-run=client                                      - to check configuration
  --dry-run=client -o yaml                              - to have output yaml in console
  --dry-run=client -o yaml > file.yaml                  - to have output yaml in file.yaml
  
  
_________________________________________________________________________________________________________________________________________________________________________________
                                                 _________________________________________Cluster________________________________________________
k cluster-info



_________________________________________________________________________________________________________________________________________________________________________________
                                                 ____________________________________________POD_________________________________________________
k get pods
k get pods -o wide                                                   show on what node run pod


k run hello --image=nginx --port=80 -l tier=db                       создать под и окрыть порт 80, лейбл -l
k port-forward --address 10.10.10.1 hello 7777:80      пробросить порт 80 контейнера в 7777 порт хоста (ноды --address 10.10.10.1)
kubectl run redis --image=redis:alpine -l tier=db

k describe pods hello

k delete pods hello

k logs hello

k exec -it hello bash

k apply -f myfile.yaml                                               create object from manifest
k delete -f myfile.yaml

kubectl edit pod redis 
kubectl apply (create)  pod redis                                    для создания и обновления ресурсов

kubectl run nginx --image=nginx --restart=Never                      Create an NGINX Pod

kubectl get pod <pod-name> -o yaml > pod-definition.yaml             extract the definition to a file
________________________________________________________________________________________________________________________________________________________

__________________________________________________________________________ ReplicaSet___________________________________________________________________
k create -f replicaset-file.yaml
k scale replicaset --replicas=2 replicaset-name
k scale --replicas=2 -f replicaset-file.yaml
k replace -f replicaset-file.yaml


________________________________________________________________________________________________________________________________________________________
________________________________________________________________________Service_________________________________________________________________________
kubectl expose pod redis --port=6379 --name redis-service              Create a service redis-service to expose the redis application within the cluster on port 6379



________________________________________________________________________________________________________________________________________________________
___________________________________________________________________________Namespace____________________________________________________________________

k create namespace namespace_name                                                        create namespace
k config set-context --current                   --namespace=dev                         Set "dev" as current namespace
k config set-context $(k config current-context) --namespace=dev                                
k config view | grep(findstr) namespace                                                  get current namespace
k get pods --all-namespaces                                                              get pod from all namespaces



kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml    Generate POD Manifest YAML file (-o yaml). Don't create it(--dry-run)

________________________________________________________________________________________________________________________________________________________
______________________________________________________________________ Deployment_______________________________________________________________________

kubectl create deployment nginx-dep --image=nginx                                                Create a deployment

kubectl create deployment nginx-dep --image=nginx  --dry-run -o yaml > nginx-deployment.yaml     Generate Deployment YAML file (-o yaml). Don't create it(--dry-run)
kubectl scale deployment/nginx-dep --replicas=10                                                 scale replicas


--- Service ---


kubectl expose pod redis --port=6379 --name redis-service --dry-run -o yaml     Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379

(This will automatically use the pod's labels as selectors)


kubectl create service clusterip redis --tcp=6379:6379 --dry-run -o yaml  (This will not use the pods labels as selectors, instead it will assume selectors as app=redis. You cannot pass in selectors as an option. So it does not work very well if your pod has a different label set. So generate the file and modify the selectors before creating the service)



Create a Service named nginx of type NodePort to expose pod nginx's port 80 on port 30080 on the nodes:

kubectl expose pod nginx --port=80 --name nginx-service --dry-run -o yaml

(This will automatically use the pod's labels as selectors, but you cannot specify the node port. You have to generate a definition file and then add the node port in manually before creating the service with the pod.)

Or

kubectl create service nodeport nginx --tcp=80:80 --node-port=30080 --dry-run -o yaml

(This will not use the pods labels as selectors)

Both the above commands have their own challenges. While one of it cannot accept a selector the other cannot accept a node port. I would recommend going with the `kubectl expose` command. If you need to specify a node port, generate a definition file using the same command and manually input the nodeport before creating the service.


kubectl get pod webapp -o yaml > my-new-pod.yaml    -  експортировать в yaml файл
_____________________________________________________________________________________________________________________________________________________________________________
__________________________________________________________________________________Command Dockerfile_________________________________________________________________________
        DOCKERFILE              DOCKERFILE             DOCKERFILE               

ENTRYPOINT["sleep"]   =    CMD["sleep","5"]       =    CMD sleep 5                CMD sleep 5    ->  can change  ->         docker run ubuntu-sleeper sleep 10
CMD["5"]                 (["command","param1"]) 
                                                                                  ENTRYPOINT["sleep"]
                                                                                  CMD["5"]               ->  can change  -> docker run ubuntu-sleeper 10
                                                                                  
                                                                                  ENTRYPOINT["sleep"]
                                                                                  CMD["5"]               ->  can change  -> docker run --entrypoint sleep2.0 ubuntu-sleeper 10
   
   __________________________________________________________________________________________________________________________________________________________________________
   _________________________________________________________________________________Secret___________________________________________________________________________________
   
   kubectl create secret generic db-secret --from-literal=DB_Host=sql01 --from-literal=DB_User=root --from-literal=DB_Password=password123
       
       
    envFrom:
    - secretRef:
        name: db-secret
   
   
     - - - - - - - - -- - - - - - - - - - - - -- - - - - - - -- - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
     
     
     DOCKERFILE              k8s file

ENTRYPOINT["sleep"]   ->    command:["sleep2"]
CMD["5"]              ->    arg:["10"]


Add file (folder) into conteiner from machine 
kubectl cp .\Downloads\app.zip rte-c759b4c4b-skmp7:/home/app.zip  --insecure-skip-tls-verify=true




