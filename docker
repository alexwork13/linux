         Docker component:

docker engine           -  сама установка docker
docker container        -  прототип виртуальной машины, контейнер
docker image            -  образ контейнера
docker file (Dockerfile)           -  файл в котором описан docker image



                                 Установка

sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt update -y
sudo apt install -y docker-ce
sudo gpasswd -a "${USER}" docker

Docker compose

sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose


docker ps             -  список запущеных контейнеров
-a                       все
--format (docker ps --format '{{.Names}}\t{{.Image}}')  формат вывода

docker login          -  залогинится на docker hub

docker build -t(--tag) friendlyhello .                  создать образ в текущей дериктории с Dockerfile
docker run -p 4000:80 friendlyhello                     запустить "friendlyhello" пробросив порт 4000(внешний) to 80(внутрений)
                                                        -P (все порты)
docker run -d -p 4000:80 friendlyhello                  + в фоновом режиме
docker run -it image_name bash(sh)                      интерактивный tty контейнера
docker container ls                                     отображает все запущеные контейненры
docker container ls -a                                  отображает все контейненры, даже те что не запущеные
docker container stop <hash> (container_name)           останавливает указаный контейнер
docker container kill <hash>                            убивает указаный контейнер
docker container rm <hash>                              удаляет указаный контейнер 
docker container rm $(docker container ls -a -q)        удаляет все контейнеры
docker rm -f $(docker ps -aq)
docker container prune
docker image ls -a                                      отображает все образы
docker image rm <image id>                              удаляет указаный образ
docker image rm $(docker image ls -a -q)                удаляет все образы
docker tag <image> username/repository:tag              указать тег <image> для загрузки на registry
docker push username/repository:tag                     закачать указаный тегированый образ registry
docker run username/repository:tag                      запустить образ с указаного registry
docker stats                                            мониторинг статуса контейнира


                                    DOCKERFILE
                                    
 

