-------------------------Групповые символы, использующиеся при работе с текстовыми данными:---------------------------

* – любое количество любых символов;
**? ** _ – любой символ;_
**! ** – не (любой символ кроме указанных);
**[ac] ** – a или c ;
[a - c] _ –_ a , b , c_._


-----------------------------------------Права доступа и владельцы файлов---------------------------------------------

В классической линуксовой файловой системе можно задавать права доступа на основе трех принадлежностей: 
владелец объекта, группа владельцев, все остальные.

Посмотреть текущие права доступа, равно как и владельце можно при помощи команды stat:
      stat file_name
      
Изменить владельца объекта можно при помощи команды chown
      chown user_owner:group_name file_name.txt (сделатьuser_owner владельцем файла и группи group_name file.txt );
                                                (если только групу изменить -  :group_name file_name)

Изменить группу владельцев объекта можно при помощи команды chgrp 
      chgrp group_name file.txt (сделать группу group_name группой владельцев файла file.txt);
      
Для установки разрешений на доступ к объекту файловой системы Linux использует комбинации трех стандартных прав:
чтение, запись и выполнение.

suid - бит запуска от имени владельца;            -  дериктории
sgid - бит запуска от имени группы владельцев;    -  файлы и дериктории
**sticky ** - бит защиты содержимого.

Права можно устанавливать, как указывая буквенные комбинации (r- read, w – write и x - execute)  rwx
                                                                  4     +      2     +    1     = 7
                                                                  
                                     SUID (s или 4)        SGID (s или 2)               sticky-bit (t или 1)    
user  - u |           r 4              u+s
group - g | > a   +-  w 2                                       g+2
other - o |           x 1                                                                    o+t   

При работе с объектами файловой системы можно указывать маски создания файлов и папок, 
разрешения доступа по умолчанию для вновь создаваемых объектов.
Посмотреть установленую маску
      umask 
      umask 0022   -   установить маску 0755 (0777-0022)


----------------------------------------поиск информации команда - FIND ---------------------------------------------
                            
                            
find    [папка]            [параметры]        критерий                          шаблон [действие]
           |                    |              |                                   |
каталог в котором искать    доп параметры    имя, дата создания, права   значение по которому будем отбирать файлы

Параметры:
-P никогда не открывать символические ссылки
-L - получает информацию о файлах по символическим ссылкам. Важно для дальнейшей обработки, чтобы обрабатывалась не ссылка, а сам файл.
-maxdepth - максимальная глубина поиска по подкаталогам, для поиска только в текущем каталоге установите 1.
-depth - искать сначала в текущем каталоге, а потом в подкаталогах
-mount искать файлы только в этой файловой системе.
-version - показать версию утилиты find
-print - выводить полные имена файлов
-type f - искать только файлы
-type d - поиск папки в Linux

Критерии:
-name - поиск файлов по имени (-iname не учитывать регистр)
-perm - поиск файлов в Linux по режиму доступа
-user - поиск файлов по владельцу
-group - поиск по группе
-mtime - поиск по времени модификации файла
-atime - поиск файлов по дате последнего чтения
-nogroup - поиск файлов, не принадлежащих ни одной группе
-nouser - поиск файлов без владельцев
-newer - найти файлы новее чем указанный
-size - поиск файлов в Linux по их размеру

Пример:
   find . -name "*.jpg"   -   Искать файлы по имени в текущей папке
   find . -maxdepth 1 -name "*.php"   -   Поиска файлов по имени в Linux только в этой папке
   find . -not -name "test*"   -  Найти файлы, которые не соответствуют шаблону
   find . -name "test" -not -name "*.php"   -   все файлы, начинающиеся на test, но без расширения php
   find ./test ./test2 -type f -name "*.c"   -   Искать в двух каталогах одновременно только файлы с окончанием
   find ~ -type f -name ".*"   -   Найти скрытые файлы в домашней дериктории 
   find . type f -perm 0664   -   Найти файлы с определенной маской прав, например, 0664
   find / -perm 2644 или find / -perm /u=s  -   Найти файлы с установленным флагом suid/guid
   find /tmp -type f -empty   -   поиск пустих файлов (папок - d)
   
Для выполнения произвольных команд для найденных файлов используется опция -exec. 

 find . -exec ls -ld {} \;   -   ls для получения подробной информации о каждом файле
 find /tmp -type f -name "*.txt" -exec rm -f {} \;   -   Удалить все текстовые файлы в tmp
 find /home/bob/dir -type f -name *.log -size +10M -exec rm -f {} \;   -   Удалить все файлы больше 100 мегабайт

   ---------------------------------------------------------------------------------------------------------------

Установка завышенных прав доступа к файлам (биты suid и sgid) может привести в серьезным нарушениям системы безопасности. Так, стороннее ПО или скрипты, запускаемые от имени суперпользователя могут собирать конфиденциальную информацию или менять настройки системы без ведома пользователя.
Для поиска всех файлов в системе, на которые установлен завышенные права можно воспользоваться командами:
sudo find / -perm –u+s  (поиск по всей файловой системе файлов с установленным SUID);
sudo find / -perm –g+s  (поиск по всей файловой системе файлов с установленным SGID);
sudo find / -perm –u+s,g+s  (поиск файлов, на который установлен и SUID и SGID);
sudo find / -perm /u+s,g+s  (поиск файлов, на который установлен  SUID или SGID);

__
Частой задачей политики безопасности является установка срока действия учетной записи и параметров пароля. Для задания пароля учетной записи используется команда passwd, например:
sudo passwd petr	(установить пароль на учетную запись petr);
Для управления блокировкой учетной записью используется команда usermod, например:
sudo usermod –L petr	(заблокировать учетную запись petr);
sudo usermod –U petr	(разблокировать учетную запись petr).

Установка срока действия параметров учетной записи осуществляется при помощи команды chage, например:
sudo chage –l petr	(вывести параметры учетной записи petr);
sudo chage petr		(задать параметры учетной записи petr).
При помощи утилиты chage можно указать следующие значения:
    • дата последней смены пароля;
    • срок действия пароля (актуальность);
    • срок деактивации пароля (время работы с неактуальным паролем);
    • срок действия учетной записи (вне зависимости от параметров пароля);
    • минимальный срок действия пароля;
    • максимальный срок действия пароля;
    • количество дней с предупреждением перед деактивацией пароля.
Каждый из указанных параметров можно изменить по отдельности, запуская утилиту chage с различными ключами.

Глобальные политики безопасности всех учетных записей системы можно указать в файле /etc/login.defs
__

Зачастую политикой безопасности предусмотрена установка ограничений ресурсов на процессы, запускаемые пользователями или скриптами. Для этого используется команда ulimit, например:
ulimit –a		(показать существующие ограничения);
ulimit –f 0 	(установить ограничение на размер создаваемого файла в 0 блоков);
При этом установленные ограничения справедливы действуют в рамках открытой консоли, или скрипта, запущенного с соответствующими параметрами. Для установки правил ограничений используется файл /etc/security/limits.conf.  
Каждая строчка этого файла представляет собой правило вида «кто, вид ограничения, параметр, значение», например:
*   hard  maxlogins   1	(для всех пользователей установить жесткое ограничение на параметр «количество одновременных сеансов» в размере «1»)
__

В традиционной ОС Linux существует один суперпользователь root с максимальными правами доступа к системе. Часто вход в систему от имени root запрещен, поэтому для работы от его имени используются утилиты, временно дающие максимальные привилегии.

Для того чтобы начать работу от имени root можно выполнить команду su – (будет запрошен пароль root и вызвана оболочка регистрации в системе. Домашним каталогом станет домашняя папка root).
Для завершения сеанса root необходимо выполнить команду exit.

Для того чтобы выполнить с правами root одну команду можно воспользоваться командой su с ключом –c, например:
su –c ‘vi /etc/resolv.conf’	(запустить текстовый редактор vi с правами root);

В большинстве современных дистрибутивов Linux используется утилита sudo, вызов которой запрашивает пароль текущего пользователя и дает разовые полномочия root, например:
sudo vi /etc/resolv.conf		(запустить текстовый редактор vi с правами root);

Для установки разрешений повышения прав до root при помощи утилиты sudo используется файл /etc/sudoers, редактирование которого необходимо осуществлять при помощи утилиты visudo.
Для создания разрешения доступа к sudo можно создать в файле /etc/sudoers правило вида «кто откуда=(от имени пользователя:от имени группы) команда», например:
semaev ALL=(ALL)    ALL	(пользователю semaev разрешено из любого расположения выполнять любые команды от имени любого пользователя).
При этом в указанном файле уже созданы необходимые правила с максимальными привилегиями для группы admin (в Debian) и группы wheel (в RedHat). То есть для разрешения доступа пользователя к sudo достаточно добавить его в эти группы.
__

Частой административной задачей является проверка системы на наличие открытых сетевых портов, что повышает вероятность сетевой атаки и уязвимость системы в целом.

Для проверки запущенных сетевых служб и открытых портов можно воспользоваться командой netstat. Например:
netstat –tuna	(показать в цифровом формате открытые TCP и UDP порты);

Для сканирования хоста на наличие открытых портов можно воспользоваться командой nmap, например:
nmap 192.168.1.50  (просканировать адрес 192.168.1.50 на наличие открытых портов);

Для поиска портов занятых конкретным демоном можно воспользоваться командой lsof, например:
sudo lsof –I		(показать текущие сетевые соединения);
sudo lsof –c:dnsmasq	(какие порты использует демон dnsmasq);

Для поиска демонов, использующих конкретный порт можно воспользоваться командой fuser, например:
sudo fuser 53/tcp	(показать демоны, использующие порт 53).
__

Иногда бывает нужно определить пользователей, работающих в системе в данный момент, или просмотреть историю сеансов.

Команда w показывает активных в данный момент пользователей и их процессы, например:
w	(вывести информацию об активных сеансах всех пользователей);
w petr	(вывести информацию об активных сеансах пользователя petr).

Команда who показывает информацию о текущих сеансах активных пользователей, например:
who –b    (время последней загрузки);
who –qH	(все активные сеансы пользователей).

Также для работы с бинарными файлами, хранящими сведения о сеансах пользователей, доступны команды:
users	(вывод пользователей, работающих в системе из файла /var/run/utmp);
last	(вывод истории пользователей, входивших в систему из файла /var/run/wtmp);
lastb	(вывод истории неудачных попыток входа /var/run/btmp).
