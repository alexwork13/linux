---------------------------------------------------Стандартные дескрипторы файлов--------------------------------------------

Всё в Linux — это файлы, в том числе — ввод и вывод. Операционная система идентифицирует файлы с использованием дескрипторов.
Каждому процессу позволено иметь до девяти открытых дескрипторов файлов. 
Оболочка bash резервирует первые три дескриптора с идентификаторами 0, 1 и 2. Вот что они означают.

      0, STDIN — стандартный поток ввода.
      1, STDOUT — стандартный поток вывода.
      2, STDERR — стандартный поток ошибок.

Эти три специальных дескриптора обрабатывают ввод и вывод данных в сценарии.

                                                    -------------STDIN--------------

STDIN — это стандартный поток ввода оболочки. Для терминала стандартный ввод — это клавиатура. 
Когда в сценариях используют символ перенаправления ввода — <, Linux заменяет дескриптор файла стандартного ввода на тот,
который указан в команде. Система читает файл и обрабатывает данные так, будто они введены с клавиатуры.
                                                                                                                                                          
                                                    -------------STDOUT-------------
                                                    
STDOUT — стандартный поток вывода оболочки. По умолчанию это — экран. Большинство bash-команд выводят данные в STDOUT, 
что приводит к их появлению в консоли. Данные можно перенаправить в файл, присоединяя их к его содержимому, 
для этого служит команда >>.

                                                    -------------STDERR-------------
                                                             
STDERR представляет собой стандартный поток ошибок оболочки. По умолчанию этот дескриптор указывает на то же самое, 
на что указывает STDOUT, именно поэтому при возникновении ошибки мы видим сообщение на экране.
Можно перенаправить ошибки, разместив этот дескриптор перед командой перенаправления:

      ls -l xfile 2>myfile
      
-   Для того что бы разделить и перенаправлять стандартный вывод и вывод об ошибках в разные файлы необходимо
      
      ls –l myfile xfile anotherfile 2> errorcontent 1> correctcontent
                                 (ошибки)     (стандартный вывод)
                                 
-   Если необходимо вывести все вместе  -   &>

                                         --------Временное перенаправление вывода-----

В скрипте можно перенаправить вывод отдельной строки в STDERR. Для того, чтобы это сделать, достаточно использовать
команду перенаправления, указав дескриптор STDERR, при этом перед номером дескриптора надо поставить символ амперсанда (&):

           echo "This is an error" >&2
           echo "This is normal output"
           
Запустим скрипт так, чтобы вывод STDERR попадал в файл.

           ./myscript 2> myfile   (STDOUT на екран)
       
                                         ------Постоянное перенаправление вывода---------

Если в скрипте нужно перенаправлять много выводимых на экран данных, добавлять соответствующую команду к каждому вызову 
echo неудобно. Вместо этого можно задать перенаправление вывода в определённый дескриптор на время выполнения скрипта, 
воспользовавшись командой exec:
           
            exec 1>outfile
            echo "This is a test of redirecting all output"
            echo "from a shell script to another file."
            
                                        ---------Перенаправление ввода в скриптах-------------
                                        
  команда exec позволяет сделать источником данных для STDIN какой-нибудь файл:
                  
                  exec 0< testfile
                  count=1
                  while read line
                  do
                  echo "Line #$count: $line"
                  count=$(( $count + 1 ))
                  done



Подавить вывод сообщений об ошибках:

            ls -al badfile anotherfile 2> /dev/null

Тот же подход используется, если, например, надо очистить файл, не удаляя его:

            cat /dev/null > myfile
